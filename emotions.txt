<<<<<<< HEAD
PS C:\Users\NAVYA\Documents\moodify> python emotions.py
2025-02-26 20:38:46.440320: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-02-26 20:38:47.658979: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
WARNING:tensorflow:From C:\Users\NAVYA\AppData\Local\Programs\Python\Python311\Lib\site-packages\tf_keras\src\losses.py:2976: The name tf.losses.sparse_softmax_cross_entropy is deprecated. Please use tf.compat.v1.losses.sparse_softmax_cross_entropy instead.

Dataset Columns Before Preprocessing: ['text', 'labels', 'id']
Map: 100%|█████████████████████████████████████████████████████████████████████████████████████| 43410/43410 [00:22<00:00, 1958.97 examples/s] 
Map: 100%|███████████████████████████████████████████████████████████████████████████████████████| 5426/5426 [00:03<00:00, 1796.32 examples/s] 
Map: 100%|███████████████████████████████████████████████████████████████████████████████████████| 5427/5427 [00:02<00:00, 1936.32 examples/s] 
Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
{'eval_loss': 1.414624571800232, 'eval_accuracy': 0.5748249170659786, 'eval_f1': 0.55625264544128, 'eval_runtime': 37.1848, 'eval_samples_per_second': 145.92, 'eval_steps_per_second': 4.572, 'epoch': 1.0}
{'eval_loss': 1.3568519353866577, 'eval_accuracy': 0.5895687430888316, 'eval_f1': 0.5727110766843768, 'eval_runtime': 38.7582, 'eval_samples_per_second': 139.996, 'eval_steps_per_second': 4.386, 'epoch': 2.0}                                                                              
{'train_runtime': 6368.0108, 'train_samples_per_second': 13.634, 'train_steps_per_second': 0.213, 'train_loss': 1.50392983585684, 'epoch': 2.0}
100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 1356/1356 [1:46:08<00:00,  4.70s/it]
Training completed!
Model and tokenizer saved!

Evaluating model on test set...
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████| 170/170 [00:38<00:00,  4.43it/s]

Evaluation Results:
Test Accuracy: 0.5779
Test F1 Score: 0.5608
C:\Users\NAVYA\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
C:\Users\NAVYA\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
C:\Users\NAVYA\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

Classification Report:
               precision    recall  f1-score   support

           0       0.65      0.74      0.69       504
           1       0.73      0.86      0.79       252
           2       0.47      0.47      0.47       197
           3       0.32      0.20      0.25       286
           4       0.54      0.35      0.42       318
           5       0.46      0.40      0.43       114
           6       0.47      0.39      0.43       139
           7       0.43      0.61      0.51       233
           8       0.60      0.42      0.49        74
           9       0.38      0.22      0.28       127
          10       0.42      0.37      0.39       220
          11       0.48      0.40      0.44        84
          12       0.71      0.40      0.51        30
          13       0.48      0.39      0.43        84
          14       0.59      0.70      0.64        74
          15       0.84      0.83      0.83       288
          16       0.00      0.00      0.00         6
          17       0.52      0.56      0.54       116
          18       0.65      0.82      0.72       169
          19       0.00      0.00      0.00        16
          20       0.56      0.49      0.52       120
          21       0.00      0.00      0.00         8
          22       0.47      0.08      0.14       109
          23       0.00      0.00      0.00         7
          24       0.57      0.74      0.64        46
          25       0.55      0.47      0.51       108
          26       0.42      0.48      0.44        92
          27       0.60      0.71      0.65      1606

    accuracy                           0.58      5427
   macro avg       0.46      0.43      0.44      5427
weighted avg       0.56      0.58      0.56      5427

Test results saved to 'test_results.csv'!
=======
PS C:\Users\NAVYA\Documents\moodify> python emotions.py
2025-02-26 20:38:46.440320: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-02-26 20:38:47.658979: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
WARNING:tensorflow:From C:\Users\NAVYA\AppData\Local\Programs\Python\Python311\Lib\site-packages\tf_keras\src\losses.py:2976: The name tf.losses.sparse_softmax_cross_entropy is deprecated. Please use tf.compat.v1.losses.sparse_softmax_cross_entropy instead.

Dataset Columns Before Preprocessing: ['text', 'labels', 'id']
Map: 100%|█████████████████████████████████████████████████████████████████████████████████████| 43410/43410 [00:22<00:00, 1958.97 examples/s] 
Map: 100%|███████████████████████████████████████████████████████████████████████████████████████| 5426/5426 [00:03<00:00, 1796.32 examples/s] 
Map: 100%|███████████████████████████████████████████████████████████████████████████████████████| 5427/5427 [00:02<00:00, 1936.32 examples/s] 
Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
{'eval_loss': 1.414624571800232, 'eval_accuracy': 0.5748249170659786, 'eval_f1': 0.55625264544128, 'eval_runtime': 37.1848, 'eval_samples_per_second': 145.92, 'eval_steps_per_second': 4.572, 'epoch': 1.0}
{'eval_loss': 1.3568519353866577, 'eval_accuracy': 0.5895687430888316, 'eval_f1': 0.5727110766843768, 'eval_runtime': 38.7582, 'eval_samples_per_second': 139.996, 'eval_steps_per_second': 4.386, 'epoch': 2.0}                                                                              
{'train_runtime': 6368.0108, 'train_samples_per_second': 13.634, 'train_steps_per_second': 0.213, 'train_loss': 1.50392983585684, 'epoch': 2.0}
100%|███████████████████████████████████████████████████████████████████████████████████████████████████| 1356/1356 [1:46:08<00:00,  4.70s/it]
Training completed!
Model and tokenizer saved!

Evaluating model on test set...
100%|███████████████████████████████████████████████████████████████████████████████████████████████████████| 170/170 [00:38<00:00,  4.43it/s]

Evaluation Results:
Test Accuracy: 0.5779
Test F1 Score: 0.5608
C:\Users\NAVYA\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
C:\Users\NAVYA\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))
C:\Users\NAVYA\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1565: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

Classification Report:
               precision    recall  f1-score   support

           0       0.65      0.74      0.69       504
           1       0.73      0.86      0.79       252
           2       0.47      0.47      0.47       197
           3       0.32      0.20      0.25       286
           4       0.54      0.35      0.42       318
           5       0.46      0.40      0.43       114
           6       0.47      0.39      0.43       139
           7       0.43      0.61      0.51       233
           8       0.60      0.42      0.49        74
           9       0.38      0.22      0.28       127
          10       0.42      0.37      0.39       220
          11       0.48      0.40      0.44        84
          12       0.71      0.40      0.51        30
          13       0.48      0.39      0.43        84
          14       0.59      0.70      0.64        74
          15       0.84      0.83      0.83       288
          16       0.00      0.00      0.00         6
          17       0.52      0.56      0.54       116
          18       0.65      0.82      0.72       169
          19       0.00      0.00      0.00        16
          20       0.56      0.49      0.52       120
          21       0.00      0.00      0.00         8
          22       0.47      0.08      0.14       109
          23       0.00      0.00      0.00         7
          24       0.57      0.74      0.64        46
          25       0.55      0.47      0.51       108
          26       0.42      0.48      0.44        92
          27       0.60      0.71      0.65      1606

    accuracy                           0.58      5427
   macro avg       0.46      0.43      0.44      5427
weighted avg       0.56      0.58      0.56      5427

Test results saved to 'test_results.csv'!
>>>>>>> b1313c5d084e410cadf261f2fafd8929cb149a4f
PS C:\Users\NAVYA\Doc